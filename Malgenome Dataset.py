import pandas as pd
import pylab
import matplotlib.pyplot as plt
from sklearn.naive_bayes import GaussianNB, BernoulliNB
from sklearn.metrics import accuracy_score, classification_report
from sklearn.model_selection import train_test_split

from sklearn.neighbors import KNeighborsClassifier

df=pd.read_csv("malgenome-215-dataset-1260malware-2539-benign.csv");

print(df.shape)




#Splitting dataset into train and test for both algorithms
X_train, X_test, y_train, y_test = train_test_split(df.iloc[:, 1:3799], df['class'], test_size=0.20, random_state=42)


# Naive Bayes algorithm
gnb = GaussianNB()
gnb.fit(X_train, y_train)

# prediction
pred = gnb.predict(X_test)

# accuracy
accuracy = accuracy_score(pred, y_test)
print("naive_bayes")
print(accuracy)
print(classification_report(pred, y_test, labels=None))


#kneighbors algorithm
for i in range(3, 15, 3):
    neigh = KNeighborsClassifier(n_neighbors=i)
    neigh.fit(X_train, y_train)

    # prediction
    pred = neigh.predict(X_test)

    # accuracy
    accuracy = accuracy_score(pred, y_test)
    print("kneighbors {}".format(i))
    print(accuracy)
    print(classification_report(pred, y_test, labels=None))
    print("")